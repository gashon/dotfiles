#------------------------------------------------------------------------------
# General\
#------------------------------------------------------------------------------
setw -gq utf8 on

# disable sound bell
set -g bell-action none
# disable visual bell
set -g visual-bell off

set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

set -g default-terminal "screen-256color"

# Set the number of lines in the history.
set -g history-limit 100000

# Display a title.
set -g set-titles on
set -g set-titles-string 'tmux: #I #W#F'

# allow for faster command sequences
set -s escape-time 1

# Start Window Numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -g repeat-time 500 # (milliseconds)

# rename the window to the command that is currently running
setw -g automatic-rename on

#------------------------------------------------------------------------------
# Key Bindings
#------------------------------------------------------------------------------

# reload config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# window management - 
bind x confirm-before kill-pane
bind K confirm-before kill-window
bind c new-window -c "#{pane_current_path}"
bind d detach-client
bind q display-panes
bind w choose-window
bind W command-prompt -p "move window to:"  "swap-window -t '%%'"

# window management - navigation
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind n next-window
bind p previous-window
# bind-key -n M-tab last-window # alt-tab to switch to last active window

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane management (resizing)
# Resize windows the vim way.
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4
bind -r H resize-pane -L 4
bind -r L resize-pane -R 4

# vimlike copy/pasting 
setw -g mode-keys vi
unbind p
bind p paste-buffer

bind-key -T edit-mode-vi Down send-keys -X history-down

unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi v send-keys -X begin-selection

unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

unbind-key -T copy-mode-vi C-v
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

unbind-key -T copy-mode-vi [
bind-key -T copy-mode-vi [ send-keys -X begin-selection

unbind-key -T copy-mode-vi ]
bind-key -T copy-mode-vi ] send-keys -X copy-selection

# copy/paste onto Linux clipboard
# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# source-file ~/.tmux.colors.conf
